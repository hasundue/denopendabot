name: Denopendabot

description: Keeps your Deno projects up-to-date

branding:
  icon: 'refresh-cw'
  color: 'gray-dark'

inputs:
  mode:
    description: Run mode ('action' or 'app')
    required: true
    default: action

  token:
    description: Access token authorized to run workflows (for Action)
    required: false

  user-token:
    description: Personal access token authorized to update workflows (for Action)
    required: false

  repository:
    description: Repository to update dependencies
    required: true
    default: ${{ github.repository }}

  base-branch:
    description: Branch to update
    required: true
    default: main

  working-branch:
    description: Working branch for Denopendabot
    required: true
    default: denopendabot

  include:
    description: Specify Files to update (space-separated)
    required: false

  exclude:
    description: Files to exclude (space-separated)
    required: false

  labels:
    description: Labels for the pull request (space-separated)
    required: false

  release:
    description: Bump the project version to this value for a release
    required: false
  
  auto-merge:
    description: Merge a pull request automaticaly ('any', for App)
    required: false

outputs:
  updated:
    description: true if updated
    value: ${{ steps.run.outputs.updated }}

runs:
  using: composite

  steps:
    - name: Run Denopendabot GitHub App
      if: ${{ inputs.mode == 'app' }}
      uses: peter-evans/repository-dispatch@v2
      with:
        event-type: denopendabot-run
        client-payload: ${{ toJSON(inputs) }}

    - name: Setup Deno
      if: ${{ inputs.mode == 'action' }}
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.27.0 # @denopendabot denoland/deno

    - name: Run Denopendabot from the CLI
      if: ${{ inputs.mode == 'action' }}
      run: >
        deno run -q --allow-env --allow-net --allow-write
        https://deno.land/x/denopendabot@0.8.1/cli.ts
        ${{ inputs.repository }}
        --base-branch ${{ inputs.base-branch }}
        --working-branch ${{ inputs.working-branch }}
        --token ${{ inputs.token || github.token }}
        ${{ inputs.user-token && format('--user-token {0}', inputs.user-token) }}
        ${{ inputs.include && format('--include {0}', inputs.include) }}
        ${{ inputs.exclude && format('--exclude {0}', inputs.exclude) }}
        ${{ inputs.release && format('--release {0}', inputs.release) }}
        ${{ inputs.labels && format('--labels {0}', inputs.labels) }}
      shell: bash
